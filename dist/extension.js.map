{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://html-list-lens/./src/config.ts","webpack://html-list-lens/./src/extension.ts","webpack://html-list-lens/./src/parser.ts","webpack://html-list-lens/external commonjs \"vscode\"","webpack://html-list-lens/./src/getEffectiveLanguages.ts","webpack://html-list-lens/webpack/bootstrap","webpack://html-list-lens/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\r\n\r\nexport interface DecorationStyleConfig extends vscode.WorkspaceConfiguration {\r\n  light: {\r\n    color: string;\r\n    backgroundColor: string;\r\n  };\r\n  dark: {\r\n    color: string;\r\n    backgroundColor: string;\r\n  };\r\n  fontStyle: string;\r\n  fontWeight: string;\r\n}\r\n\r\nexport function getConfig(): DecorationStyleConfig {\r\n  const config = vscode.workspace.getConfiguration('htmlListLens');\r\n\r\n  return {\r\n    ...config,\r\n    light: {\r\n      color: config.get('decorations.lightColor', 'lightgray'),\r\n      backgroundColor: config.get('decorations.lightBackground', 'rgba(0, 0, 0, 0.1)'),\r\n    },\r\n    dark: {\r\n      color: config.get('decorations.darkColor', 'gray'),\r\n      backgroundColor: config.get('decorations.darkBackground', 'rgba(255, 255, 255, 0.1)'),\r\n    },\r\n    fontStyle: config.get('decorations.fontStyle', 'italic'),\r\n    fontWeight: config.get('decorations.fontWeight', 'normal'),\r\n  };\r\n}\r\n","import * as vscode from 'vscode';\nimport { extractLiHierarchy, Position } from './parser';\nimport { getEffectiveLanguages } from './getEffectiveLanguages';\nimport { getConfig } from './config';\n\nlet liDecoration: vscode.TextEditorDecorationType;\n\nfunction createDecorationType(): vscode.TextEditorDecorationType {\n  const config = getConfig();\n\n  return vscode.window.createTextEditorDecorationType({\n    after: {\n      margin: '0 0 0 0.5em',\n    },\n    light: {\n      after: {\n        color: config.light.color,\n        backgroundColor: config.light.backgroundColor,\n        fontStyle: config.fontStyle,\n        fontWeight: config.fontWeight,\n      },\n    },\n    dark: {\n      after: {\n        color: config.dark.color,\n        backgroundColor: config.dark.backgroundColor,\n        fontStyle: config.fontStyle,\n        fontWeight: config.fontWeight,\n      },\n    },\n  });\n}\n\nexport function activate(context: vscode.ExtensionContext) {\n  liDecoration = createDecorationType();\n\n  context.subscriptions.push(liDecoration);\n\n  const onChange = vscode.workspace.onDidChangeTextDocument((event) => {\n    const editor = vscode.window.activeTextEditor;\n\n    if (!editor || editor.document !== event.document) {\n      return false;\n    }\n\n    annotateLiTags(editor);\n  });\n\n  const onOpen = vscode.window.onDidChangeActiveTextEditor((editor) => {\n    if (editor) {\n      annotateLiTags(editor);\n    }\n  });\n\n  // 🔥 新增這段：開啟 VS Code 當下就自動標記\n  const active = vscode.window.activeTextEditor;\n\n  if (active) {\n    annotateLiTags(active);\n  }\n\n  vscode.workspace.onDidChangeConfiguration((ev) => {\n    if (ev.affectsConfiguration('htmlListLens.decorations')) {\n      liDecoration?.dispose();\n      liDecoration = createDecorationType();\n  \n      const editor = vscode.window.activeTextEditor;\n      if (editor) {\n        annotateLiTags(editor); // 重新套用\n      }\n    }\n  });\n\n  context.subscriptions.push(onChange, onOpen);\n}\n\nexport function deactivate() {\n  if (liDecoration) liDecoration.dispose();\n}\n\nasync function annotateLiTags(editor: vscode.TextEditor) {\n  const lang = editor.document.languageId;\n  const allowed = getEffectiveLanguages();\n\n  if (!allowed.includes(lang)) {\n    return false;\n  }\n\n  const text = editor.document.getText();\n  const info = extractLiHierarchy(text);\n\n  const decorations: vscode.DecorationOptions[] = [];\n\n  const renderMark = (position: Position, offsetX: number, path: number[]) => {\n    const insertPosition = new vscode.Position(position.line - 1, position.char - 1 + offsetX);\n    const hint = `#${path.join('.')}`;\n\n    decorations.push({\n      range: new vscode.Range(insertPosition, insertPosition),\n      renderOptions: {\n        after: {\n          contentText: hint,\n        },\n      },\n    });\n  };\n\n  for (const li of info) {\n    renderMark(li.start, 3, li.path);\n    renderMark(li.end, 4, li.path);\n  }\n\n  editor.setDecorations(liDecoration, decorations);\n}\n","export type Position = {\r\n  line: number;\r\n  char: number;\r\n};\r\n\r\nexport type LiInfo = {\r\n  start: Position;\r\n  end: Position;\r\n  level: number;\r\n  index: number;\r\n  path: number[];\r\n};\r\n\r\ntype Token = {\r\n  type: 'open-li' | 'close-li' | 'open-list' | 'close-list';\r\n  listType?: 'ul' | 'ol';\r\n  position: Position;\r\n  raw: string;\r\n};\r\n\r\nexport function extractLiHierarchy(text: string): LiInfo[] {\r\n  const lines = text.split('\\n');\r\n  const tokens: Token[] = [];\r\n  const tagRegex = /<(\\/?)(ul|ol|li)\\b[^>]*?>/gi;\r\n\r\n  for (let lineIdx = 0; lineIdx < lines.length; lineIdx++) {\r\n    const line = lines[lineIdx];\r\n    let match: RegExpExecArray | null;\r\n\r\n    tagRegex.lastIndex = 0;\r\n\r\n    while ((match = tagRegex.exec(line))) {\r\n      const [raw, slash, tag] = match;\r\n      const position: Position = {\r\n        line: lineIdx + 1,\r\n        char: match.index + 1,\r\n      };\r\n\r\n      if (tag === 'ul' || tag === 'ol') {\r\n        tokens.push({\r\n          type: slash ? 'close-list' : 'open-list',\r\n          listType: tag as 'ul' | 'ol',\r\n          position,\r\n          raw,\r\n        });\r\n      } else if (tag === 'li') {\r\n        tokens.push({\r\n          type: slash ? 'close-li' : 'open-li',\r\n          position,\r\n          raw,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const result: LiInfo[] = [];\r\n\r\n  const stack: {\r\n    type: 'ul' | 'ol';\r\n    counter: number;\r\n    path: number[];\r\n  }[] = [];\r\n\r\n  const liOpenStack: {\r\n    path: number[];\r\n  }[] = [];\r\n\r\n  const liPairStack: {\r\n    start: Position;\r\n    path: number[];\r\n  }[] = [];\r\n\r\n  for (const token of tokens) {\r\n    switch (token.type) {\r\n      case 'open-list': {\r\n        // 🧠 關鍵：判斷是否目前有一個未結束的 li，才繼承其 path\r\n        const inheritPath = liOpenStack.length > 0\r\n          ? [...liOpenStack[liOpenStack.length - 1].path]\r\n          : [];\r\n\r\n        stack.push({\r\n          type: token.listType!,\r\n          counter: 0,\r\n          path: inheritPath,\r\n        });\r\n\r\n        break;\r\n      }\r\n\r\n      case 'close-list':\r\n        stack.pop();\r\n        break;\r\n\r\n      case 'open-li':\r\n        if (stack.length === 0) {\r\n          break;\r\n        }\r\n\r\n        const currentList = stack[stack.length - 1];\r\n        currentList.counter++;\r\n        const path = [...currentList.path, currentList.counter];\r\n\r\n        // push 到尚未關閉的 li stack\r\n        liOpenStack.push({ path });\r\n        liPairStack.push({\r\n          start: token.position,\r\n          path,\r\n        });\r\n        break;\r\n\r\n      case 'close-li': {\r\n        const li = liPairStack.pop();\r\n\r\n        liOpenStack.pop();\r\n\r\n        if (li) {\r\n          result.push({\r\n            start: li.start,\r\n            end: token.position,\r\n            level: li.path.length,\r\n            index: li.path.at(-1)!,\r\n            path: li.path,\r\n          });\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n","module.exports = require(\"vscode\");","import { getConfig } from './config';\r\n\r\nconst DEFAULT_LANGUAGES = [\r\n  'html',\r\n  'handlebars',\r\n  'twig',\r\n  'php',\r\n  'javascript',\r\n  'javascriptreact',\r\n  'typescript',\r\n  'typescriptreact',\r\n  'vue',\r\n  'svelte',\r\n];\r\n\r\nexport function getEffectiveLanguages(): string[] {\r\n  const config = getConfig();\r\n\r\n  const includes = config.get<string[]>('includeLanguages') ?? [];\r\n  const excludes = config.get<string[]>('excludeLanguages') ?? [];\r\n\r\n  const combined = new Set([...DEFAULT_LANGUAGES, ...includes]);\r\n\r\n  for (const lang of excludes) {\r\n    combined.delete(lang);\r\n  }\r\n\r\n  return [...combined];\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["config","vscode","workspace","getConfiguration","light","color","get","backgroundColor","dark","fontStyle","fontWeight","context","liDecoration","createDecorationType","subscriptions","push","onChange","onDidChangeTextDocument","event","editor","window","activeTextEditor","document","annotateLiTags","onOpen","onDidChangeActiveTextEditor","active","onDidChangeConfiguration","ev","affectsConfiguration","dispose","getConfig","createTextEditorDecorationType","after","margin","async","lang","languageId","getEffectiveLanguages","includes","text","getText","info","extractLiHierarchy","decorations","renderMark","position","offsetX","path","insertPosition","Position","line","char","hint","join","range","Range","renderOptions","contentText","li","start","end","setDecorations","lines","split","tokens","tagRegex","lineIdx","length","match","lastIndex","exec","raw","slash","tag","index","type","listType","result","stack","liOpenStack","liPairStack","token","inheritPath","counter","pop","currentList","level","at","module","exports","require","excludes","combined","Set","DEFAULT_LANGUAGES","delete","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}